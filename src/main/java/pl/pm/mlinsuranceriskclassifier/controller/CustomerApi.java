/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.12.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package pl.pm.mlinsuranceriskclassifier.controller;

import pl.pm.mlinsuranceriskclassifier.entity.Customer;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

/*
 * Interfejs CustomerApi wygenerowany automatycznie przez OpenAPI Generator.
 */
@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-04-01T20:51:40.687523300+02:00[Europe/Berlin]", comments = "Generator version: 7.12.0")
@Validated
@Tag(name = "customer", description = "the customer API")
public interface CustomerApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /customer/classify : Klasyfikacja ryzyka klienta
     * Przyjmuje dane klienta i zwraca ocenę ryzyka ubezpieczeniowego
     *
     * @param customer  (required)
     * @return Sukces - zwraca poziom ryzyka ubezpieczeniowego (status code 200)
     *         or Brak możliwości klasyfikacji ryzyka (status code 204)
     */
    @Operation(
        operationId = "classifyCustomer",
        summary = "Klasyfikacja ryzyka klienta",
        description = "Przyjmuje dane klienta i zwraca ocenę ryzyka ubezpieczeniowego",
        responses = {
            @ApiResponse(responseCode = "200", description = "Sukces - zwraca poziom ryzyka ubezpieczeniowego", content = {
                @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))
            }),
            @ApiResponse(responseCode = "204", description = "Brak możliwości klasyfikacji ryzyka", content = {
                @Content(mediaType = "text/plain", schema = @Schema(implementation = String.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/customer/classify",
        produces = { "text/plain" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<String> classifyCustomer(
        @Parameter(name = "Customer", description = "", required = true) @Valid @RequestBody Customer customer
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
